From fc67144df82536667ca20df617d3d218cea23c69 Mon Sep 17 00:00:00 2001
From: Volodymyr Mytnyk <volodymyr.mytnyk@plvision.eu>
Date: Tue, 25 Jan 2022 16:54:48 +0200
Subject: [PATCH 30/40] cleanup: no inline in source code

JIRA: SWITCHDEV-000

Signed-off-by: Volodymyr Mytnyk <volodymyr.mytnyk@plvision.eu>
---
 drivers/net/ethernet/marvell/prestera/prestera_acl.c     | 2 +-
 drivers/net/ethernet/marvell/prestera/prestera_counter.c | 2 +-
 drivers/net/ethernet/marvell/prestera/prestera_flow.c    | 2 +-
 drivers/net/ethernet/marvell/prestera/prestera_fw_log.c  | 8 ++++----
 4 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/drivers/net/ethernet/marvell/prestera/prestera_acl.c b/drivers/net/ethernet/marvell/prestera/prestera_acl.c
index b76fa1b7c6f3..b48df0bbf081 100644
--- a/drivers/net/ethernet/marvell/prestera/prestera_acl.c
+++ b/drivers/net/ethernet/marvell/prestera/prestera_acl.c
@@ -143,7 +143,7 @@ prestera_acl_nat_port_create(struct prestera_acl *acl,
 	return nat_port;
 }
 
-static inline bool prestera_acl_chain_is_supported(u32 chain_index)
+static bool prestera_acl_chain_is_supported(u32 chain_index)
 {
 	return (chain_index & ~PRESTERA_ACL_CHAIN_MASK) == 0;
 }
diff --git a/drivers/net/ethernet/marvell/prestera/prestera_counter.c b/drivers/net/ethernet/marvell/prestera/prestera_counter.c
index 7020c03ef330..3ea14f9fda07 100644
--- a/drivers/net/ethernet/marvell/prestera/prestera_counter.c
+++ b/drivers/net/ethernet/marvell/prestera/prestera_counter.c
@@ -41,7 +41,7 @@ enum {
 	COUNTER_FLAG_INVALID = 1
 };
 
-static inline bool
+static bool
 prestera_counter_is_ready(struct prestera_counter_block *block, u32 id)
 {
 	return block->counter_flag[id - block->offset] == COUNTER_FLAG_READY;
diff --git a/drivers/net/ethernet/marvell/prestera/prestera_flow.c b/drivers/net/ethernet/marvell/prestera/prestera_flow.c
index a1d9d0844e60..776574d00f36 100644
--- a/drivers/net/ethernet/marvell/prestera/prestera_flow.c
+++ b/drivers/net/ethernet/marvell/prestera/prestera_flow.c
@@ -89,7 +89,7 @@ static void prestera_flow_block_release(void *cb_priv)
 	prestera_flow_block_destroy(block);
 }
 
-static inline bool
+static bool
 prestera_flow_block_is_bound(const struct prestera_flow_block *block)
 {
 	return block->ruleset_zero;
diff --git a/drivers/net/ethernet/marvell/prestera/prestera_fw_log.c b/drivers/net/ethernet/marvell/prestera/prestera_fw_log.c
index 64cb88aa9ba0..5d50b61636d2 100644
--- a/drivers/net/ethernet/marvell/prestera/prestera_fw_log.c
+++ b/drivers/net/ethernet/marvell/prestera/prestera_fw_log.c
@@ -35,8 +35,8 @@ static ssize_t mvsw_pr_fw_log_debugfs_read(struct file *file,
 static ssize_t mvsw_pr_fw_log_debugfs_write(struct file *file,
 					    const char __user *ubuf,
 					    size_t count, loff_t *ppos);
-static inline int mvsw_pr_fw_log_get_type_from_str(const char *str);
-static inline int mvsw_pr_fw_log_get_lib_from_str(const char *str);
+static int mvsw_pr_fw_log_get_type_from_str(const char *str);
+static int mvsw_pr_fw_log_get_lib_from_str(const char *str);
 
 static int mvsw_pr_fw_log_event_handler_register(struct prestera_switch *sw);
 static void mvsw_pr_fw_log_event_handler_unregister(struct prestera_switch *sw);
@@ -334,7 +334,7 @@ static ssize_t mvsw_pr_fw_log_debugfs_write(struct file *file,
 	return err;
 }
 
-static inline int mvsw_pr_fw_log_get_type_from_str(const char *str)
+static int mvsw_pr_fw_log_get_type_from_str(const char *str)
 {
 	int i;
 
@@ -349,7 +349,7 @@ static inline int mvsw_pr_fw_log_get_type_from_str(const char *str)
 	return PRESTERA_FW_LOG_TYPE_MAX;
 }
 
-static inline int mvsw_pr_fw_log_get_lib_from_str(const char *str)
+static int mvsw_pr_fw_log_get_lib_from_str(const char *str)
 {
 	int i;
 
-- 
2.17.1

